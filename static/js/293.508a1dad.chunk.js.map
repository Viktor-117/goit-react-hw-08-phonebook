{"version":3,"file":"static/js/293.508a1dad.chunk.js","mappings":"uRAEaA,EAAeC,EAAAA,GAAAA,KAAH,yCAIZC,EAAYD,EAAAA,GAAAA,MAAH,6FAMTE,EAAcF,EAAAA,GAAAA,MAAH,6DAKXG,EAAiBH,EAAAA,GAAAA,OAAH,sFAMdI,EAAMJ,EAAAA,GAAAA,IAAH,mEAKHK,EAAQL,EAAAA,GAAAA,GAAH,gD,UCdH,SAASM,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACQC,GAAUC,EAAAA,EAAAA,KAAVD,MAEFE,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEL,EAUD,OACE,UAAChB,EAAD,YACE,SAACC,EAAD,wBACA,UAACN,EAAD,CAAcsB,aAAa,MAAMC,SAXhB,SAAAC,GACnBA,EAAEC,iBACFjB,EAASkB,EAAAA,GAAAA,SAAwB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAKG,WACE,UAACd,EAAD,mBAEE,SAACC,EAAD,CACEwB,KAAK,OACLhB,KAAK,OACLU,MAAOV,EACPiB,SAAUT,QAId,UAACjB,EAAD,qBAEE,SAACC,EAAD,CACEwB,KAAK,QACLhB,KAAK,QACLU,MAAOR,EACPe,SAAUT,QAId,UAACjB,EAAD,uBAEE,SAACC,EAAD,CACEwB,KAAK,WACLhB,KAAK,WACLU,MAAON,EACPa,SAAUT,QAId,SAACf,EAAD,CAAgBuB,KAAK,SAArB,yBAEDV,GAASY,EAAAA,GAAAA,MAAYZ,KAG3B,C","sources":["pages/RegisterView/RegisterView.styled.js","pages/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterForm = styled.form`\n  width: 320px;\n`;\n\nexport const InputName = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n`;\n\nexport const StyledInput = styled.input`\n  font-size: 16px;\n  padding: 4px;\n`;\n\nexport const RegisterButton = styled.button`\n  padding: 4px 8px;\n  margin-top: 32px;\n  cursor: pointer;\n`;\n\nexport const Box = styled.div`\n  margin-top: 40px;\n  margin-left: 30px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { toast } from 'react-toastify';\nimport {useAuth} from 'hooks';\nimport {\n  RegisterForm,\n  InputName,\n  StyledInput,\n  RegisterButton,\n  Box,\n  Title,\n} from './RegisterView.styled';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { error } = useAuth();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Box>\n      <Title>Register</Title>\n      <RegisterForm autoOcmplete=\"off\" onSubmit={handleSubmit}>\n        <InputName>\n          Name\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </InputName>\n\n        <InputName>\n          E-mail\n          <StyledInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </InputName>\n\n        <InputName>\n          Password\n          <StyledInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </InputName>\n\n        <RegisterButton type=\"submit\">Register</RegisterButton>\n      </RegisterForm>\n      {error && toast.error(error)}\n    </Box>\n  );\n}\n"],"names":["RegisterForm","styled","InputName","StyledInput","RegisterButton","Box","Title","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","error","useAuth","handleChange","target","value","autoOcmplete","onSubmit","e","preventDefault","authOperations","type","onChange","toast"],"sourceRoot":""}