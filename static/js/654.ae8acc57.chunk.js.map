{"version":3,"file":"static/js/654.ae8acc57.chunk.js","mappings":"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","sources":["pages/ContactsView/ContactsView.styled.js","components/PhonebookForm/PhonebookForm.styled.js","components/PhonebookForm/PhonebookForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ListItem/ListItem.styled.js","components/ListItem/ListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 500px;\n  left: 300px;\n  margin-top: 50px;\n  justify-content: center;\n  font-size: 40px;\n  color: #010101;\n`;\n\nexport const Title = styled.h1`\n  font-size: 40px;\n  font-weight: 700;\n  margin-bottom: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 400px;\n  border: 1px solid #000;\n  padding: 20px;\n  margin-bottom: 32px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/operations';\nimport { useContacts } from 'hooks';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { Container } from './PhonebookForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup\n    .string('Enter your name')\n    .min(3, 'Name must be at least 3 characters long')\n    .max(32, 'Name must be less than 32 characters long')\n    .required('Name is required'),\n  number: yup\n    .number('Enter your phone number')\n    .min(4, 'Phone number must be at least 4 characters long')\n    .required('Phone number is required'),\n});\n\nexport default function PhonebookForm() {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const contactsNameCheck = name => {\n    const normalizedName = name.toLowerCase();\n    return contacts.find(contact =>\n      contact.name.toLowerCase().includes(normalizedName)\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    contactsNameCheck(values.name)\n      ? toast.error(`${values.name} is already in contacts!`)\n      : dispatch(addContact(values));\n\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: { name: '', number: '' },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Container>\n      <Box\n        onSubmit={formik.handleSubmit}\n        autoComplete=\"off\"\n        component=\"form\"\n        sx={{\n          '& > :not(style)': {\n            m: 1,\n            width: '380px',\n            display: 'flex',\n            flexDirection: 'column',\n          },\n        }}\n      >\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          autoComplete=\"off\"\n          type=\"text\"\n          variant=\"outlined\"\n          value={formik.values.name}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n          onChange={formik.handleChange}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"number\"\n          name=\"number\"\n          label=\"Phone Number\"\n          autoComplete=\"off\"\n          type=\"tel\"\n          variant=\"outlined\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n          margin=\"normal\"\n        />\n        <Box\n          sx={{\n            '& > :not(style)': {\n              marginTop: '16px',\n              width: '150px',\n            },\n          }}\n        >\n          <Button type=\"submit\" variant=\"contained\">\n            Add contact\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { useContacts } from 'hooks';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box\n      autoComplete=\"off\"\n      component=\"form\"\n      sx={{\n        '& > :not(style)': {\n          m: 1,\n          width: '380px',\n          display: 'flex',\n          flexDirection: 'column',\n        },\n      }}\n    >\n      <TextField\n        id=\"filter\"\n        name=\"filter\"\n        label=\"Find contacts by name\"\n        type=\"text\"\n        variant=\"outlined\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: 64px;\n`;\n\nexport const Box = styled.div`\n  margin-top: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItemText = styled.li`\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  margin-left: 8px;\n  background-color: transparent;\n  color: #f44336;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const Text = styled.p`\n  display: inline;\n`;\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from 'prop-types';\nimport { ListItemText, Text } from './ListItem.styled';\n\nexport default function ListItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const { id, name, number } = contact;\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ListItemText>\n      <Text>\n        {name}: {number}\n      </Text>\n\n      <IconButton\n        aria-label=\"delete\"\n        color=\"error\"\n        type=\"button\"\n        onClick={handleDelete}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItemText>\n  );\n}\n\nListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport { fetchContacts } from 'redux/operations';\nimport { useContacts } from 'hooks';\nimport { List, Box } from './ContactList.styled';\nimport ListItem from 'components/ListItem';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { isLoading, error, visibleContacts } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      {error && toast.error('Ooops, something went wrong. Please, try again')}\n      {visibleContacts.length > 0 && (\n        <List>\n          {visibleContacts.map(contact => {\n            return <ListItem key={contact.id} contact={contact}></ListItem>;\n          })}\n        </List>\n      )}\n      {isLoading && <RotatingLines strokeColor=\"#4fa94d\"></RotatingLines>}\n    </Box>\n  );\n}\n","import { Container, Title } from './ContactsView.styled';\nimport PhonebookForm from 'components/PhonebookForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nexport default function ContactsView() {\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <PhonebookForm></PhonebookForm>\n\n      <Title>Contacts</Title>\n      <Filter></Filter>\n      <ContactList></ContactList>\n    </Container>\n  );\n}\n"],"names":["Container","styled","Title","schema","yup","shape","name","min","max","required","number","PhonebookForm","dispatch","useDispatch","contacts","useContacts","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","normalizedName","toLowerCase","find","contact","includes","contactsNameCheck","addContact","toast","Box","handleSubmit","autoComplete","component","sx","m","width","display","flexDirection","TextField","id","label","type","variant","value","error","touched","Boolean","errors","helperText","onChange","handleChange","margin","marginTop","Button","Filter","filter","event","setFilter","target","List","ListItemText","Text","ListItem","IconButton","color","onClick","deleteContact","Delete","ContactList","isLoading","visibleContacts","useEffect","fetchContacts","length","map","strokeColor","ContactsView"],"sourceRoot":""}